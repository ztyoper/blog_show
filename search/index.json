[{"content":" A = 48 B = -63 尾数 8 位，2 个符号位，阶数 8 位，2 个符号位。\n求[A]补和[B]补的规范化二进制与对应的十六进制\n48 = 32 + 16 【A】原反补 = 110000 \u0026ndash;\u0026gt; 00.110000*2^6\u0026ndash;\u0026gt;\n00.000110，00.110000\n-63 = -(2^6 - 1) 【B】原 = 111111 \u0026ndash;\u0026gt; 11.111111*2^6\u0026ndash;\u0026gt;\n00.000110，11.111111\n【B】补 = 00.000110, 11.111111 \u0026ndash;\u0026gt;00.0110，11.11111100\n\u0026ndash;\u0026gt;00.000110, 11.000000(反码)\u0026ndash;\u0026gt;00.0110, 11.000001(补码)\n求【A+B】补的规范化二进制和对应的十六进制\n$ \\begin{align} \u0026amp;【A】补 = 00.000110, 00.110000 \\ \u0026amp;【B】补 = 00.000110, 11.000001\\ \u0026amp;【C\u0026rsquo;】补= 00.000110, 11.110001\\ \u0026amp;【C】补 = 00.000100, 11.000100 \\end{align} $\n左规，尾数变大（不论尾数是正负数），阶数要变小（不论阶数是正负数） 右规，尾数变小（不论尾数是正负数），阶数要变大（不论阶数是正负数） 其他的看 ppt 就行 ","date":"2025-02-15T12:01:33+08:00","permalink":"https://example.com/p/%E6%B5%AE%E7%82%B9%E6%95%B0/","title":"浮点数"},{"content":"3.5.2.Cache 与主存的映射方式 1.三种映射方式 2.全相联映射 组相联映射如果是”2 路组相联“则每组有两个 Cache 块组成。\n图中：每个 Cache 块都有有效位和标记两个属性。\n标记：9 表示主存中第 9 块存储在 Cache 中。\n有效位:1 表示有效，0 表示无效。图中第 7 个 Cache 块标记为 0，但是有效位是 1，相当于主存第 0 块存储在第 7 个 Cache 块中。这也是为什么要设计有效位。\n主存大小 256MB=$ 2^8 * 2^{20} $= $ 2^{28} $个存储单元 0~$ 2^{28}-1 $28 个地址位。 将主存按照一个 Cache 块的大小进行分块，因为 Cache 与主存的交互是以 块为单位的。 8 个 Cache 行就是 8 个 Cache 块，为了避免 Cache 块与主存块混淆，以下都是用 Cache 行作为称呼。 行长可以理解为 Cache 块的大小，主存块大小与 Cache 块的大小相等，主存块以每个字节为单位，总共 64 个单位，需要 6 位块内地址。 剩余的 22 个地址为作为标记位，全相联中 Cache 块的标记位要有和主存单元总个数相同的大小。 CPU访问主存地址:\n首先已知第$ 2^{22}-3 $个主存块存储在第 1 行 Cache;第 0 个主存块存储在第 3 行 Cache 中。 CPU 访问存储单元 1...1101001110 主存地址都前 22 位\u0026hellip;后续直接看图好不好。 3.直接相联映射 主存大小 256MB=$ 2^8 * 2^{20} $= $ 2^{28} $个存储单元 0~$ 2^{28}-1 $28 个地址位。 将主存按照一个 Cache 块的大小进行分块，因为 Cache 与主存的交互是以 块为单位的。 行长可以理解为 Cache 块的大小，主存块大小与 Cache 块的大小相等，以每个字节为单位，总共 64 个单位，需要 6 位块内地址。 剩余的 22 个地址为作为标记位，全相联中 Cache 块的标记位要有和主存单元总个数相同的大小。 值得注意的是：标记为22位太多可以优化： 因为使用取模的方式固定映射，那么一个 Cache 行可以被多个主存块映射，因此每一个主存块的块号取模的后 3 位都是一样的。例如:能存储到 0 行 Cache 的主存块有 1 号和$ 2^{22}-3 $号，它们取模 3 都是 000。 4.直接相联映射的优化 主存大小 256MB=$ 2^8 * 2^{20} $= $ 2^{28} $个存储单元 0~$ 2^{28}-1 $28 个地址位。 将主存按照一个 Cache 块的大小进行分块，因为 Cache 与主存的交互是以 块为单位的。 行长可以理解为 Cache 块的大小，主存块大小与 Cache 块的大小相等，以每个字节为单位，总共 64 个单位，需要 6 位块内地址。 剩余的 19 个地址为作为标记位。3 为作为中间 3 位作为行号。 CPU 查询主存地址是否在 Cache 中存在时，就可以使用 将访问的存储单元二进制的中间 3 位行号，先查看对应 Cache 中 是否存有数据，也就是有效位 是否为1。 设置行号最主要是少了 3 个标记位。节省了空间。 5.组相联映射 看懂上面全相联和直接相联就可以看懂组相联了。不想写了\n对组相联的理解：\n组内随便停车。 融合全相联容易停车的优点和直接相联容易查询的优点。 就是将 2 行 Cache 行合并为 1 组。可以当成一个 Cache 行，这样组相联后续的分析就和直接映射的分析一样了。 6.三种映射方式的总结（优缺点） ","date":"2025-02-15T12:01:32+08:00","permalink":"https://example.com/p/cache%E7%BC%93%E5%AD%98/","title":"Cache缓存"}]